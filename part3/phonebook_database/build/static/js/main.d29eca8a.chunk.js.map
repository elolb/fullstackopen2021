{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","newObject","post","id","console","log","put","delete","Notification","successMessage","errorMessage","className","Filter","searchedNameValue","searchedNameOnChange","personArray","value","onChange","filter","person","name","toUpperCase","map","number","Persons","persons","setPersons","setSuccessMessage","setErrorMessage","onClick","removedPerson","window","confirm","personService","then","setTimeout","catch","PersonForm","onSubmit","nameValue","nameOnChange","numberValue","numberOnChange","type","App","useState","newName","setNewName","newNumber","setNewNumber","searchedName","setSearchedName","useEffect","response","data","length","event","target","preventDefault","exists","updatedObject","error","personObject","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d29eca8a.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl)\r\n}\r\n\r\nconst create = newObject => {\r\n  return axios.post(baseUrl, newObject)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  console.log(`update id ${id}`)\r\n  return axios.put(`${baseUrl}/${id}`, newObject)\r\n}\r\n\r\nconst remove = (id) => {\r\n  console.log(id)\r\n  return axios.delete(`${baseUrl}/${id}`)\r\n}\r\nexport default { \r\n  getAll, \r\n  create, \r\n  update,\r\n  remove\r\n}","import React, { useState, useEffect } from 'react'\nimport personService from \"./services/persons\"\n\nconst Notification = ({ successMessage, errorMessage }) => {\n  if (successMessage === null && errorMessage===null) {\n    return null\n  }\n    if(errorMessage){\n      return <div className=\"error\">\n       {errorMessage}\n      </div>\n    }\n  else return (\n    <div className=\"success\">\n      {successMessage}\n    </div>\n  )\n}\n\nconst Filter = ({searchedNameValue, searchedNameOnChange, personArray}) => {\n  return(\n    <>\n    <div>filter shown with:\n      <input\n        value={searchedNameValue}\n        onChange={searchedNameOnChange}\n      />\n    </div>\n    <ul>\n      {personArray.filter(person => person.name.toUpperCase()===searchedNameValue.toUpperCase())\n      .map(person => <li key={person.name}>{person.name} {person.number}</li>)\n      }\n    </ul>\n    </>\n  )}\nconst Persons = ({persons,setPersons, setSuccessMessage, setErrorMessage}) => {\n  const deletePerson = (removedPerson) => {\n    if(window.confirm(`Delete ${removedPerson.name}?`)){\n      console.log(`before ${removedPerson.id}`)\n    personService\n      .remove(removedPerson.id)\n      .then(()=>{\n        setPersons(persons.filter(person=>person.id!==removedPerson.id))\n        setSuccessMessage(`${removedPerson.name} is deleted.`)\n        setTimeout(() => {          setSuccessMessage(null)        }, 5000)\n      })\n      .catch(()=>{\n        setErrorMessage(`${removedPerson.name} has already been deleted.`)\n        setTimeout(() => {          setErrorMessage(null)        }, 5000)\n        setPersons(persons.filter(person=>person.id!==removedPerson.id))\n      })\n    }\n  }\n  return(\n    <ul>\n        {\n        persons.map(person => \n        <div key={person.name}>\n          <li>{person.name} {person.number} <button onClick={()=>deletePerson(person)}>delete</button></li>\n        </div>\n        )}\n    </ul>\n  )}\nconst PersonForm = ({onSubmit, nameValue, nameOnChange, numberValue, numberOnChange}) => \n{\n  return(\n  <>\n  <form onSubmit={onSubmit}>\n    <div>name:\n      <input\n        value={nameValue}\n        onChange={nameOnChange}\n      />\n    </div>\n    <div>number:\n      <input\n        value={numberValue}\n        onChange={numberOnChange}\n        />\n    </div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>\n  </>\n)}\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('05xxxxxx')\n  const [searchedName, setSearchedName] = useState(\"\")\n  const [successMessage, setSuccessMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n  useEffect(() => {\n    console.log(\"effect\")\n    personService.getAll()\n      .then(response => {\n        console.log(\"promise fulfilled\")\n        setPersons(response.data)\n      })\n      .catch(()=>{\n        setErrorMessage(\"Couldn't connect the server.\")\n        setTimeout(() => {          setErrorMessage(null)        }, 5000)\n      })\n  },[])\n  console.log(\"render\", persons.length, \"persons\")\n\n  const addName = (event) => {\n    event.preventDefault()\n    let exists=0\n    let id=-1\n    for(const person of persons){\n      if(person.name===newName){\n        exists=1\n        id=person.id\n        break\n      }\n    }\n    if(exists){\n      if(window.confirm(`${newName} is already added to the phonebook. Replace the old number with a new one?`)){\n        let updatedObject = {\n          name: newName ,\n          number: newNumber\n        }\n        personService\n          .update(id, updatedObject)\n          .then(response => {\n            updatedObject.id=response.data.id\n            setPersons(persons.map(person=> person.name!==updatedObject.name ? person : updatedObject))\n            setSuccessMessage(`${updatedObject.name}'s number is updated.`)\n            setTimeout(() => {          setSuccessMessage(null)        }, 5000)\n            setNewName(\"\")\n            setNewNumber(\"\")\n          })\n          .catch((error)=>{\n            if (error.name===\"TypeError\"){\n              setErrorMessage(`${newName} was already deleted`)\n              setPersons(persons.filter(person =>person.name!==newName))\n            }\n            else {setErrorMessage(error.response.data.error)}\n            setTimeout(() => {          setErrorMessage(null)        }, 5000)\n            setNewName(\"\")\n            setNewNumber(\"\")\n          })\n      }\n    }\n    else {\n      const personObject = {\n        name: newName ,\n        number: newNumber\n      }\n      personService\n      .create(personObject)\n      .then(response => {\n        setPersons(persons.concat(response.data))\n        setSuccessMessage(`${personObject.name} is added.`)\n        setTimeout(() => {          setSuccessMessage(null)        }, 5000)\n\n      })\n      .catch(error => {\n        setErrorMessage(error.response.data.error)\n        setTimeout(() => {          setErrorMessage(null)        }, 5000)\n      })\n\n    }  \n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n \n  const handleSearchedNameChange = (event) => {\n    setSearchedName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  return (\n    <div>\n      <Notification successMessage={successMessage} errorMessage={errorMessage}></Notification>\n      <h2>Phonebook</h2>\n      <Filter searchedNameValue={searchedName} searchedNameOnChange={handleSearchedNameChange}\n        personArray={persons}\n      ></Filter>\n      <h3>Add new number</h3>\n      <PersonForm onSubmit={addName} \n        nameValue= {newName} nameOnChange={handleNameChange}\n        numberValue= {newNumber} numberOnChange={handleNumberChange}\n      />\n      <h3>Numbers</h3>\n      <Persons persons={persons} setPersons={setPersons} setSuccessMessage={setSuccessMessage} setErrorMessage={setErrorMessage}></Persons>\n    </div>\n  )\n}\nexport default App\n","import ReactDOM from 'react-dom'\nimport App from './App'\nimport \"./index.css\"\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)"],"sourceRoot":""}